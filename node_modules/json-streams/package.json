{
  "name": "json-streams",
  "description": "Streams for parsing and stringifying big JSON objects",
  "version": "0.1.1",
  "homepage": "http://github.com/floby/node-json-streams",
  "repository": {
    "type": "git",
    "url": "git://github.com/floby/node-json-streams.git"
  },
  "author": {
    "name": "Florent Jaby",
    "email": "florent.jaby@gmail.com"
  },
  "main": "lib/index.js",
  "directories": {
    "lib": "lib"
  },
  "engines": {
    "node": "0.4 - 0.9.0"
  },
  "dependencies": {
    "tokenizer": "0.1",
    "parser": "0.1"
  },
  "devDependencies": {
    "vows": "0.6+"
  },
  "scripts": {
    "test": "vows ./test/*.vow.js"
  },
  "readme": "# Synopsis\nStreamed parser and stringifier that act like writable and readable streams\n\n## ParseStream\nYou can build a `ParseStream` like so:\n\n``` javascript\nvar json = require('json-streams');\nvar p = json.createParseStream();\n```\n\n`p` is an instance of the `json.ParseStream` class. `json.ParseStream` is a\nwritable stream which means you can write or pipe data to it.\n\n``` javascript\nvar net = require('net');\nvar c = net.createConnection(1337, 'example.com');\nc.pipe(p);\n```\n\nAt the moment, ParseStream supports only one output event which is the \n`'end'` event. The listener gets called with the fully parsed object as\nargument. No data is buffered during the parsing so you can load very big\nJSON files. Support for finer events is on the TODO list as well as the\npossibility to ignore some objects that are not needed and should be\n_\"garbage collected\"_\n\n``` javascript\np.on('end', function(object) {\n    // do something with your object\n})\n```\n\n## StringifyStream\n`StringifyStream` is only a *very* thin wrapper around\n[json-streamify](http://github.com/DTrejo/json-streamify). In fact, It is so \nthin that everything is still synchronous. Wrapping this correctly or \nrewriting some parts is at top priority on the TODO list.\n\n# TODO\n* improve `StringifyStream` so that it can pause when stringifying an object\nand continue later.\n* allow users to register on more specific events on `ParseStream`. I'm\nthinking of somekind of subscription pattern where one could register for\n`o.member`, `o.member.arrayMember[n]` or `o.member.arrayMember[3]`. However\nthis is *very* non-trivial and should be somewhat retrocompatible with the\ncurrent behaviour.\n\n# Bugs / Forks / Patches / Pull requests\nYou are very welcome to file bugs on the\n[github tracker](http://github.com/floby/node-json-streams) and send\npatches or pull requests.\n\n\n... here be license ...\n",
  "_id": "json-streams@0.1.1",
  "_from": "json-streams@>= 0.1.1"
}
